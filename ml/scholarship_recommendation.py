from dotenv import load_dotenv
from langchain_community.document_loaders import JSONLoader
from langchain_openai import OpenAIEmbeddings
from langchain_community.vectorstores import FAISS
from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain.chains.combine_documents import create_stuff_documents_chain
from langchain_core.prompts import ChatPromptTemplate
from langchain_openai import ChatOpenAI
from langchain.chains import create_retrieval_chain

load_dotenv()
import os
import json
from pathlib import Path
from pprint import pprint

import json

OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

loader = JSONLoader(
    file_path='scholarship_data_transformed.json',
    jq_schema='.[]',
    text_content=False)

data = loader.load()

embeddings = OpenAIEmbeddings(api_key=OPENAI_API_KEY)

text_splitter = RecursiveCharacterTextSplitter()
documents = text_splitter.split_documents(data)
vector = FAISS.from_documents(documents, embeddings)

llm = ChatOpenAI(api_key=OPENAI_API_KEY, temperature=0)
prompt = ChatPromptTemplate.from_template("""
Give the five best possible scheme types on which the student can apply for scholarship that matches the user profile like the caste and income and the student's academic performance and if 
the student is a domicile of maharashtra.
The eligibility criteria for the scholarship should match the student's profile as much as possible,preferrably 100%.

<context>
{context}
</context>

Question: {input}""")

document_chain = create_stuff_documents_chain(llm, prompt)

retriever = vector.as_retriever()
retrieval_chain = create_retrieval_chain(retriever, document_chain)

#example input-to be replaced with a summary generated by the llm of the user profile
user_profile = """
I am a Scheduled Caste student from Maharashtra. 
My family's annual income is Rs. 260,000. 
I have passed SSC and am looking for scholarship opportunities.
"""

response = retrieval_chain.invoke({"input": "{user_profile}"})
print(response["answer"])
